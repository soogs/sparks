function (xnew, R = NULL, xold, lambda, eps = .Machine$double.eps) 
{
  xtx <- (sum(xnew^2) + lambda)/(1 + lambda)
  # at iteration 1, xnew = column with the maximum coefficient
  
  norm.xnew <- sqrt(xtx)
  if (is.null(R)) {
    # at iteration 1, R = null
    
    R <- matrix(norm.xnew, 1, 1)
    attr(R, "rank") <- 1
    return(R)
    
    # R is now a matrix with the norm of that variable, with rank 1
    # "return(R)" finishes the function
    # therefore, at the first iteration, the R is just the norm of that variable
    # with rank 1
    # with the lambda as well.. 
  }
  Xtx <- drop(t(xnew) %*% xold)/(1 + lambda)
  r <- backsolvet(R, Xtx)
  rpp <- norm.xnew^2 - sum(r^2)
  rank <- attr(R, "rank")
  if (rpp <= eps) 
    rpp <- eps
  else {
    rpp <- sqrt(rpp)
    rank <- rank + 1
  }
  R <- cbind(rbind(R, 0), c(r, rpp))
  attr(R, "rank") <- rank
  R
}